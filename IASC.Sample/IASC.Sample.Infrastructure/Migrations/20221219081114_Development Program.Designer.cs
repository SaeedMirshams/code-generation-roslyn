// <auto-generated />
using System;
using IASC.Sample.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IASC.Sample.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221219081114_Development Program")]
    partial class DevelopmentProgram
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IASC.Sample.Domain.Entities.Competency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompetencyCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CompetencyModelId")
                        .HasColumnType("int");

                    b.Property<int>("CompetencyType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompetencyCategoryId");

                    b.HasIndex("CompetencyModelId");

                    b.ToTable("Competencies");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.CompetencyCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompetencyCategories");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.CompetencyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompetencyModels");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.CompetencyScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompetencyId")
                        .HasColumnType("int");

                    b.Property<int?>("EvaluationResultId")
                        .HasColumnType("int");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CompetencyId");

                    b.HasIndex("EvaluationResultId");

                    b.ToTable("CompetencyScores");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.DevelopmentProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentPostId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Goal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrentPostId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("DevelopmentProgram");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.DevelopmentProgramItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AnnouncementDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompetencyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("CurrentScore")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DevelopmentProgramId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EfficiencyValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvaluationMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExecutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpectedAppearance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpectedLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Program")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompetencyId");

                    b.HasIndex("DevelopmentProgramId");

                    b.ToTable("DevelopmentProgramItem");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonelNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.EvaluationPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EvaluationPeriods");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.EvaluationResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("EvaluationPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExecutionDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("IQScore")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EvaluationPeriodId");

                    b.ToTable("EvaluationResults");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.ExamParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<string>("Quorum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("ExamParameters");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.ExamScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("EvaluationResultId")
                        .HasColumnType("int");

                    b.Property<int>("ExamParameterId")
                        .HasColumnType("int");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationResultId");

                    b.HasIndex("ExamParameterId");

                    b.ToTable("ExamScores");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.PostCompetency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompetencyId")
                        .HasColumnType("int");

                    b.Property<int>("CompetencyModelId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Quorum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CompetencyId");

                    b.HasIndex("CompetencyModelId");

                    b.HasIndex("PostId");

                    b.ToTable("PostCompetencies");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.SuccessorRepository", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("RecommenderId")
                        .HasColumnType("int");

                    b.Property<int>("SelectedBy")
                        .HasColumnType("int");

                    b.Property<int>("SuccessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("RecommenderId");

                    b.HasIndex("SuccessorId");

                    b.ToTable("SuccessorRepositories");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.Competency", b =>
                {
                    b.HasOne("IASC.Sample.Domain.Entities.CompetencyCategory", "CompetencyCategory")
                        .WithMany("Competencies")
                        .HasForeignKey("CompetencyCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IASC.Sample.Domain.Entities.CompetencyModel", null)
                        .WithMany("Competencies")
                        .HasForeignKey("CompetencyModelId");

                    b.Navigation("CompetencyCategory");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.CompetencyScore", b =>
                {
                    b.HasOne("IASC.Sample.Domain.Entities.Competency", "Competency")
                        .WithMany()
                        .HasForeignKey("CompetencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IASC.Sample.Domain.Entities.EvaluationResult", null)
                        .WithMany("CompetencyScores")
                        .HasForeignKey("EvaluationResultId");

                    b.Navigation("Competency");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.DevelopmentProgram", b =>
                {
                    b.HasOne("IASC.Sample.Domain.Entities.Post", "CurrentPost")
                        .WithMany()
                        .HasForeignKey("CurrentPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IASC.Sample.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentPost");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.DevelopmentProgramItem", b =>
                {
                    b.HasOne("IASC.Sample.Domain.Entities.Competency", "Competency")
                        .WithMany()
                        .HasForeignKey("CompetencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IASC.Sample.Domain.Entities.DevelopmentProgram", "DevelopmentProgram")
                        .WithMany("DevelopmentProgramItems")
                        .HasForeignKey("DevelopmentProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competency");

                    b.Navigation("DevelopmentProgram");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.EvaluationResult", b =>
                {
                    b.HasOne("IASC.Sample.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IASC.Sample.Domain.Entities.EvaluationPeriod", "EvaluationPeriod")
                        .WithMany("EvaluationResults")
                        .HasForeignKey("EvaluationPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("EvaluationPeriod");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.ExamParameter", b =>
                {
                    b.HasOne("IASC.Sample.Domain.Entities.Exam", "Exam")
                        .WithMany("ExamParameters")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.ExamScore", b =>
                {
                    b.HasOne("IASC.Sample.Domain.Entities.EvaluationResult", null)
                        .WithMany("ExamScores")
                        .HasForeignKey("EvaluationResultId");

                    b.HasOne("IASC.Sample.Domain.Entities.ExamParameter", "ExamParameter")
                        .WithMany()
                        .HasForeignKey("ExamParameterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamParameter");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.PostCompetency", b =>
                {
                    b.HasOne("IASC.Sample.Domain.Entities.Competency", "Competency")
                        .WithMany()
                        .HasForeignKey("CompetencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IASC.Sample.Domain.Entities.CompetencyModel", "CompetencyModel")
                        .WithMany()
                        .HasForeignKey("CompetencyModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IASC.Sample.Domain.Entities.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competency");

                    b.Navigation("CompetencyModel");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.SuccessorRepository", b =>
                {
                    b.HasOne("IASC.Sample.Domain.Entities.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IASC.Sample.Domain.Entities.Employee", "Recommender")
                        .WithMany()
                        .HasForeignKey("RecommenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IASC.Sample.Domain.Entities.Employee", "Successor")
                        .WithMany()
                        .HasForeignKey("SuccessorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Recommender");

                    b.Navigation("Successor");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.CompetencyCategory", b =>
                {
                    b.Navigation("Competencies");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.CompetencyModel", b =>
                {
                    b.Navigation("Competencies");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.DevelopmentProgram", b =>
                {
                    b.Navigation("DevelopmentProgramItems");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.EvaluationPeriod", b =>
                {
                    b.Navigation("EvaluationResults");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.EvaluationResult", b =>
                {
                    b.Navigation("CompetencyScores");

                    b.Navigation("ExamScores");
                });

            modelBuilder.Entity("IASC.Sample.Domain.Entities.Exam", b =>
                {
                    b.Navigation("ExamParameters");
                });
#pragma warning restore 612, 618
        }
    }
}
